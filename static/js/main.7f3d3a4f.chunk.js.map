{"version":3,"sources":["App.js","index.js"],"names":["shortenString","str","len","length","substr","copyToClipboard","elem","select","setSelectionRange","document","execCommand","Identity","props","lenRSAOptions","map","a","genPrv","React","createRef","genPub","impPrv","state","lenRSA","impBuffer","rsa","generateNewIdentity","bind","this","setState","setTimeout","NodeRSA","b","id","className","value","exportKey","placeholder","readOnly","ref","onClick","current","setDialogue","op","disabled","i","key","onChange","newKey","e","String","Component","Encryption","encMsg","encPub","encRes","result","processInfo","res","msg","pub","encrypt","Decryption","decMsg","decPub","decRes","prv","decrypt","Dialogue","title","desc","remark","options","App","addEventListener","dialogue","undefined","run","classes","body","split","filter","c","darkIndex","indexOf","push","splice","join","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7f3d3a4f.chunk.js","sourcesContent":["import React from 'react';\nimport NodeRSA from 'node-rsa';\nimport './App.scss';\n\n\nconst shortenString = (str, len=50) => str.length <= len ? str : str.substr(0, len -3) +'...';\n\nconst copyToClipboard = elem => {\n  elem.select();\n  elem.setSelectionRange(0, 99999);\n  return document.execCommand('copy');\n};\n\nconst encrypt = (msg, pub) => {\n  const rsa = new NodeRSA(pub);\n  return rsa.encrypt(msg, 'base64');\n};\n\nconst decrypt = (msg, prv) => {\n  const rsa = new NodeRSA(prv);\n  return rsa.decrypt(msg, 'utf-8');\n};\n\nclass Identity extends React.Component {\n  lenRSAOptions = [.5, 1, 2, 3, 4].map(a => a *1024);\n  genPrv = React.createRef();\n  genPub = React.createRef();\n  impPrv = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lenRSA: 1024,\n      impBuffer: '',\n      rsa: null\n    };\n    this.generateNewIdentity = this.generateNewIdentity.bind(this);\n  }\n\n  generateNewIdentity() {\n    this.setState({ rsa: null });\n    setTimeout(() => this.setState({ rsa: new NodeRSA({ b: this.state.lenRSA }) }), 500);\n  }\n\n  componentDidMount() {\n    this.generateNewIdentity();\n  }\n\n  render() {\n    return <div>\n      <h1>Keypair</h1>\n      {this.state.rsa === null && <div id='generating'>\n        <div>Generating {this.state.lenRSA}-bit RSA keypair <span>( )</span></div>\n      </div>}\n      <div className={'split compact' +(this.state.rsa === null ? ' hidden' : '')}>\n        <textarea\n          className='ro'\n          value={this.state.rsa ? this.state.rsa.exportKey('pkcs8-private') : ''}\n          placeholder='Private key'\n          readOnly\n          ref={this.genPrv}\n          onClick={() => copyToClipboard(this.genPrv.current)}\n        ></textarea>\n        <textarea\n          className='ro'\n          value={this.state.rsa ? this.state.rsa.exportKey('pkcs8-public') : ''}\n          placeholder='Public key'\n          readOnly\n          ref={this.genPub}\n          onClick={() => copyToClipboard(this.genPub.current)}\n        ></textarea>\n      </div>\n      <div className='sep'>\n        <div className='sep2 inline'>\n          <button\n            onClick={() => {\n              this.props.setDialogue(\n                'Are you sure?',\n                'Previous pair will be overwritten. You may need to save it before generating a new keypair.',\n                ['overwrite', 'cancel'],\n                op => op === 'overwrite' && this.generateNewIdentity()\n              );\n            }}\n            disabled={this.state.rsa === null}\n          >Generate</button>\n          <div className='sep3 inline'>\n            {this.lenRSAOptions.map(\n              (b, i) => <button\n                key={i}\n                disabled={this.state.rsa === null}\n                className={this.state.lenRSA === b ? 'selected' : ''}\n                onClick={() => this.setState({ lenRSA: b })}\n              >{b}</button>\n            )}\n          </div>\n        </div>\n        <button\n          disabled={this.state.rsa === null}\n          onClick={() => {\n            this.setState({ impBuffer: '' });\n            this.props.setDialogue(\n              'Import keypair',\n              <textarea\n                ref={this.impPrv}\n                placeholder='Private key'\n                onChange={() => this.setState({ impBuffer: this.impPrv.current.value })}\n              />,\n              ['import', 'cancel'],\n              op => {\n                if (op === 'import') {\n                  try {\n                    const newKey = new NodeRSA(this.state.impBuffer);\n                    newKey.exportKey('pkcs8-private');\n                    this.setState({ rsa: newKey, impBuffer: '' });\n                  } catch(e) { return String(e); }\n                }\n              }\n            );\n          }}\n        >Import</button>\n      </div>\n    </div>;\n  }\n}\n\nclass Encryption extends React.Component {\n  encMsg = React.createRef();\n  encPub = React.createRef();\n  encRes = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      processInfo: ''\n    };\n  }\n\n  render() {\n    return <div>\n      <h1>Encryption</h1>\n      <div className='split two-to-one compact'>\n        <textarea\n          ref={this.encMsg}\n          className='top-left'\n          placeholder='Message'\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          ref={this.encPub}\n          className='bottom-left'\n          placeholder=\"Recipient's public key\"\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          className='ro right'\n          value={this.state.result}\n          placeholder='Encrypted message'\n          readOnly\n          ref={this.encRes}\n          onClick={() => copyToClipboard(this.encRes.current)}\n        />\n      </div>\n      <div className='sep2'>\n        <button\n          onClick={() => {\n            this.setState({ processInfo: 'encrypting...' });\n            try {\n              const res = encrypt(this.encMsg.current.value, this.encPub.current.value);\n              this.setState({ result: res, processInfo: '' });\n            } catch(e) {\n              this.setState({ processInfo: String(e) });\n            }\n          }}\n        >Encrypt</button>\n        <i>{shortenString(this.state.processInfo)}</i>\n      </div>\n    </div>;\n  }\n}\n\nclass Decryption extends React.Component {\n  decMsg = React.createRef();\n  decPub = React.createRef();\n  decRes = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      processInfo: ''\n    };\n  }\n\n  render() {\n    return <div>\n      <h1>Decryption</h1>\n      <div className='split two-to-one compact'>\n        <textarea\n          className='top-left'\n          ref={this.decMsg}\n          placeholder='Encrypted message'\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          className='bottom-left'\n          ref={this.decPub}\n          placeholder='Private key'\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          className='ro right'\n          value={this.state.result}\n          placeholder='Original message'\n          readOnly\n          ref={this.decRes}\n          onClick={() => copyToClipboard(this.decRes.current)}\n        />\n      </div>\n      <div className='sep2'>\n        <button\n          onClick={() => {\n            this.setState({ processInfo: 'decrypting...' });\n            try {\n              const res = decrypt(this.decMsg.current.value, this.decPub.current.value);\n              this.setState({ result: res, processInfo: '' });\n            } catch(e) {\n              this.setState({ processInfo: String(e) });\n            }\n          }}\n        >Decrypt</button>\n        <i>{shortenString(this.state.processInfo)}</i>\n      </div>\n    </div>;\n  }\n}\n\n\nclass Dialogue extends React.Component {\n  render() {\n    return <div className='dialogue'>\n      <h2>{this.props.title}</h2>\n      <p>{this.props.desc}</p>\n      <i>{this.props.remark}</i>\n      <div className='sep-rev text-align-right'>\n        {(this.props.options || ['ok']).map((op, i) =>\n          <button\n            key={i}\n            onClick={() => this.props.onClick(op)}\n          >{op}</button>\n        )}\n      </div>\n    </div>;\n  }\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.setDialogue = this.setDialogue.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => e.key === 'Escape' && this.setState({ dialogue: undefined }));\n  }\n\n  setDialogue(title='?', desc='...', options, run=()=>{}) {\n    this.setState({\n      dialogue: <Dialogue\n        title={title}\n        desc={desc}\n        options={options}\n        onClick={op => {\n          const err = run(op);\n          if (err) {\n          } else {\n            this.setState({ dialogue: undefined });\n          }\n        }}\n      />\n    });\n  }\n\n  render() {\n    return <>\n      <div className='text-align-right'>\n        <button\n          onClick={() => {\n            const className = 'dark-theme';\n            const classes = document.body.className.split(' ').filter(c => c.length !== 0);\n            const darkIndex = classes.indexOf(className);\n            if (darkIndex === -1) {\n              classes.push(className);\n            } else {\n              classes.splice(darkIndex, 1);\n            }\n            document.body.className = classes.join(' ');\n          }}\n        >Dark-Theme</button>\n      </div>\n      <Identity setDialogue={this.setDialogue} />\n      <Encryption />\n      <Decryption />\n      <div className='quote'>\n        <a href='http://github.com/rasmusmerzin/rsa-client'>source</a>\n      </div>\n      {this.state.dialogue && <div id='popup'>{this.state.dialogue}</div>}\n    </>;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}