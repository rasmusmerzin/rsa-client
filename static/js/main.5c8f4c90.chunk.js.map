{"version":3,"sources":["App.js","index.js"],"names":["copyToClipboard","elem","select","setSelectionRange","document","execCommand","Identity","props","lenRSAOptions","genPrv","React","createRef","genPub","state","lenRSA","rsa","generateNewIdentity","bind","this","setState","setTimeout","NodeRSA","b","id","className","value","exportKey","readOnly","ref","onClick","current","map","i","key","disabled","Component","Encryption","encMsg","encPub","encRes","result","processInfo","onChange","res","msg","pub","encrypt","e","String","Decryption","decMsg","decPub","decRes","prv","decrypt","App","classes","body","split","filter","c","length","darkIndex","indexOf","push","splice","console","log","join","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5c8f4c90.chunk.js","sourcesContent":["import React from 'react';\nimport NodeRSA from 'node-rsa';\nimport './App.scss';\n\n\nconst copyToClipboard = elem => {\n  elem.select();\n  elem.setSelectionRange(0, 99999);\n  return document.execCommand('copy');\n};\n\nconst encrypt = (msg, pub) => {\n  const rsa = new NodeRSA(pub);\n  return rsa.encrypt(msg, 'base64');\n};\n\nconst decrypt = (msg, prv) => {\n  const rsa = new NodeRSA(prv);\n  return rsa.decrypt(msg, 'utf-8');\n};\n\nclass Identity extends React.Component {\n  lenRSAOptions = [512, 1024, 2048, 4096];\n  genPrv = React.createRef();\n  genPub = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lenRSA: 1024,\n      rsa: null\n    };\n    this.generateNewIdentity = this.generateNewIdentity.bind(this);\n  }\n\n  generateNewIdentity() {\n    this.setState({ rsa: null });\n    setTimeout(() => this.setState({ rsa: new NodeRSA({ b: this.state.lenRSA }) }));\n  }\n\n  componentDidMount() {\n    this.generateNewIdentity();\n  }\n\n  render() {\n    return <div>\n      <h1>Generate</h1>\n      {this.state.rsa === null && <div id='generating'>\n        <div>generating {this.state.lenRSA}-bit RSA key <span>( )</span></div>\n      </div>}\n      <div className={'split compact' +(this.state.rsa === null ? ' hidden' : '')}>\n        <h2>Private key</h2>\n        <h2>Public key</h2>\n        <textarea\n          className='ro'\n          value={this.state.rsa ? this.state.rsa.exportKey('pkcs8-private') : ''}\n          readOnly\n          ref={this.genPrv}\n          onClick={() => copyToClipboard(this.genPrv.current)}\n        ></textarea>\n        <textarea\n          className='ro'\n          value={this.state.rsa ? this.state.rsa.exportKey('pkcs8-public') : ''}\n          readOnly\n          ref={this.genPub}\n          onClick={() => copyToClipboard(this.genPub.current)}\n        ></textarea>\n        <div className='row em sep'>\n          <div className='sep2 inline'>\n            <button onClick={this.generateNewIdentity}>Generate Keypair</button>\n            <div className='sep3 inline'>\n              {this.lenRSAOptions.map(\n                (b, i) => <button\n                  key={i}\n                  className={this.state.lenRSA === b ? 'selected' : ''}\n                  onClick={() => this.setState({ lenRSA: b })}\n                >{b}</button>\n              )}\n            </div>\n          </div>\n          <button disabled>Import</button>\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nclass Encryption extends React.Component {\n  encMsg = React.createRef();\n  encPub = React.createRef();\n  encRes = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      processInfo: ''\n    };\n  }\n\n  render() {\n    return <div className='split compact'>\n      <h1 className='row em'>Encryption</h1>\n      <h2>Message</h2>\n      <h2>Encrypted message</h2>\n      <textarea\n        ref={this.encMsg}\n        onChange={() => this.setState({ result: '' })}\n      />\n      <textarea\n        className='col ro'\n        value={this.state.result}\n        readOnly\n        ref={this.encRes}\n        onClick={() => copyToClipboard(this.encRes.current)}\n      />\n      <h2>{'Recipient\\'s public key'}</h2>\n      <textarea\n        ref={this.encPub}\n        onChange={() => this.setState({ result: '' })}\n      />\n      <div className='row em sep2'>\n        <button\n          onClick={() => {\n            this.setState({ processInfo: 'encrypting...' });\n            try {\n              const res = encrypt(this.encMsg.current.value, this.encPub.current.value);\n              this.setState({ result: res, processInfo: '' });\n            } catch(e) {\n              this.setState({ processInfo: String(e) });\n            }\n          }}\n        >Encrypt</button>\n        <i>{this.state.processInfo}</i>\n      </div>\n    </div>;\n  }\n}\n\nclass Decryption extends React.Component {\n  decMsg = React.createRef();\n  decPub = React.createRef();\n  decRes = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      processInfo: ''\n    };\n  }\n\n  render() {\n    return <div className='split compact'>\n      <h1 className='row em'>Decryption</h1>\n      <h2>Encrypted message</h2>\n      <h2>Original message</h2>\n      <textarea\n        ref={this.decMsg}\n        onChange={() => this.setState({ result: '' })}\n      />\n      <textarea\n        className='col ro'\n        value={this.state.result}\n        readOnly\n        ref={this.decRes}\n        onClick={() => copyToClipboard(this.decRes.current)}\n      />\n      <h2>Private key</h2>\n      <textarea\n        ref={this.decPub}\n        onChange={() => this.setState({ result: '' })}\n      />\n      <div className='row em sep2'>\n        <button\n          onClick={() => {\n            this.setState({ processInfo: 'decrypting...' });\n            try {\n              const res = decrypt(this.decMsg.current.value, this.decPub.current.value);\n              this.setState({ result: res, processInfo: '' });\n            } catch(e) {\n              this.setState({ processInfo: String(e) });\n            }\n          }}\n        >Decrypt</button>\n        <i>{this.state.processInfo}</i>\n      </div>\n    </div>;\n  }\n}\n\n\nexport default class App extends React.Component {\n  render() {\n    return <>\n      <div className='text-to-right'>\n        <button\n          onClick={() => {\n            const className = 'dark-theme';\n            const classes = document.body.className.split(' ').filter(c => c.length !== 0);\n            const darkIndex = classes.indexOf(className);\n            if (darkIndex === -1) {\n              classes.push(className);\n            } else {\n              classes.splice(darkIndex, 1);\n            }\n            console.log(classes.join(' '));\n            document.body.className = classes.join(' ');\n          }}\n        >Dark-Theme</button>\n      </div>\n      <Identity />\n      <Encryption />\n      <Decryption />\n    </>;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}