{"version":3,"sources":["App.js","index.js"],"names":["shortenString","str","len","length","substr","copyToClipboard","elem","select","setSelectionRange","document","execCommand","Identity","props","lenRSAOptions","map","a","genPrv","React","createRef","genPub","impPrv","state","lenRSA","impBuffer","rsa","generateNewIdentity","bind","this","setLoading","setState","setTimeout","NodeRSA","b","className","value","exportKey","placeholder","readOnly","ref","onClick","current","setDialogue","op","i","key","onChange","newKey","e","String","Component","Encryption","encMsg","encPub","encRes","result","processInfo","res","msg","pub","encrypt","Decryption","decMsg","decPub","decRes","prv","decrypt","Dialogue","title","desc","remark","options","App","addEventListener","dialogue","undefined","run","message","loading","classes","body","split","filter","c","darkIndex","indexOf","push","splice","join","href","id","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.39cf5509.chunk.js","sourcesContent":["import React from 'react';\nimport NodeRSA from 'node-rsa';\nimport './App.scss';\n\n\nconst shortenString = (str, len=50) => str.length <= len ? str : str.substr(0, len -3) +'...';\n\nconst copyToClipboard = elem => {\n  elem.select();\n  elem.setSelectionRange(0, 99999);\n  return document.execCommand('copy');\n};\n\nconst encrypt = (msg, pub) => {\n  const rsa = new NodeRSA(pub);\n  return rsa.encrypt(msg, 'base64');\n};\n\nconst decrypt = (msg, prv) => {\n  const rsa = new NodeRSA(prv);\n  return rsa.decrypt(msg, 'utf-8');\n};\n\nclass Identity extends React.Component {\n  lenRSAOptions = [.5, 1, 2, 3, 4].map(a => a *1024);\n  genPrv = React.createRef();\n  genPub = React.createRef();\n  impPrv = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lenRSA: 1024,\n      impBuffer: '',\n      rsa: null\n    };\n    this.generateNewIdentity = this.generateNewIdentity.bind(this);\n  }\n\n  generateNewIdentity() {\n    this.props.setLoading(`Generating ${this.state.lenRSA}-bit RSA keypair`);\n    this.setState({ rsa: null });\n    setTimeout(() => this.setState(state => {\n      state.rsa = new NodeRSA({ b: this.state.lenRSA });\n      this.props.setLoading();\n      return state;\n    }), 500);\n  }\n\n  componentDidMount() {\n    this.generateNewIdentity();\n  }\n\n  render() {\n    return <div>\n      <h1>Keypair</h1>\n      <div className='split compact'>\n        <textarea\n          className='ro'\n          value={this.state.rsa ? this.state.rsa.exportKey('pkcs8-private') : ''}\n          placeholder='Private key'\n          readOnly\n          ref={this.genPrv}\n          onClick={() => copyToClipboard(this.genPrv.current)}\n        ></textarea>\n        <textarea\n          className='ro'\n          value={this.state.rsa ? this.state.rsa.exportKey('pkcs8-public') : ''}\n          placeholder='Public key'\n          readOnly\n          ref={this.genPub}\n          onClick={() => copyToClipboard(this.genPub.current)}\n        ></textarea>\n      </div>\n      <div className='sep'>\n        <div className='sep2 inline'>\n          <button\n            onClick={() => {\n              this.props.setDialogue(\n                'Are you sure?',\n                'Previous pair will be overwritten. You may need to save it before generating a new keypair.',\n                ['overwrite', 'cancel'],\n                op => op === 'overwrite' && this.generateNewIdentity()\n              );\n            }}\n          >Generate</button>\n          <div className='sep3 inline'>\n            {this.lenRSAOptions.map(\n              (b, i) => <button\n                key={i}\n                className={this.state.lenRSA === b ? 'selected' : ''}\n                onClick={() => this.setState({ lenRSA: b })}\n              >{b}</button>\n            )}\n          </div>\n        </div>\n        <button\n          onClick={() => {\n            this.setState({ impBuffer: '' });\n            this.props.setDialogue(\n              'Import keypair',\n              <textarea\n                ref={this.impPrv}\n                placeholder='Private key'\n                onChange={() => this.setState({ impBuffer: this.impPrv.current.value })}\n              />,\n              ['import', 'cancel'],\n              op => {\n                if (op === 'import') {\n                  try {\n                    const newKey = new NodeRSA(this.state.impBuffer);\n                    newKey.exportKey('pkcs8-private');\n                    this.setState({ rsa: newKey, impBuffer: '' });\n                  } catch(e) { return String(e); }\n                }\n              }\n            );\n          }}\n        >Import</button>\n      </div>\n    </div>;\n  }\n}\n\nclass Encryption extends React.Component {\n  encMsg = React.createRef();\n  encPub = React.createRef();\n  encRes = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      processInfo: ''\n    };\n  }\n\n  render() {\n    return <div>\n      <h1>Encryption</h1>\n      <div className='split two-to-one compact'>\n        <textarea\n          ref={this.encMsg}\n          className='top-left'\n          placeholder='Message'\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          ref={this.encPub}\n          className='bottom-left'\n          placeholder=\"Recipient's public key\"\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          className='ro right'\n          value={this.state.result}\n          placeholder='Encrypted message'\n          readOnly\n          ref={this.encRes}\n          onClick={() => copyToClipboard(this.encRes.current)}\n        />\n      </div>\n      <div className='sep2'>\n        <button\n          onClick={() => {\n            this.props.setLoading('Encrypting...');\n            this.setState({ processInfo: 'encrypting...' });\n            setTimeout(() => {\n              try {\n                const res = encrypt(this.encMsg.current.value, this.encPub.current.value);\n                this.setState({ result: res, processInfo: '' });\n              } catch(e) {\n                this.setState({ processInfo: String(e) });\n              }\n              this.props.setLoading();\n            });\n          }}\n        >Encrypt</button>\n        <i>{shortenString(this.state.processInfo)}</i>\n      </div>\n    </div>;\n  }\n}\n\nclass Decryption extends React.Component {\n  decMsg = React.createRef();\n  decPub = React.createRef();\n  decRes = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      processInfo: ''\n    };\n  }\n\n  render() {\n    return <div>\n      <h1>Decryption</h1>\n      <div className='split two-to-one compact'>\n        <textarea\n          className='top-left'\n          ref={this.decMsg}\n          placeholder='Encrypted message'\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          className='bottom-left'\n          ref={this.decPub}\n          placeholder='Private key'\n          onChange={() => this.setState({ result: '' })}\n        />\n        <textarea\n          className='ro right'\n          value={this.state.result}\n          placeholder='Original message'\n          readOnly\n          ref={this.decRes}\n          onClick={() => copyToClipboard(this.decRes.current)}\n        />\n      </div>\n      <div className='sep2'>\n        <button\n          onClick={() => {\n            this.props.setLoading('Decrypting...');\n            this.setState({ processInfo: 'decrypting...' });\n            setTimeout(() => {\n              try {\n                const res = decrypt(this.decMsg.current.value, this.decPub.current.value);\n                this.setState({ result: res, processInfo: '' });\n              } catch(e) {\n                this.setState({ processInfo: String(e) });\n              }\n              this.props.setLoading();\n            });\n          }}\n        >Decrypt</button>\n        <i>{shortenString(this.state.processInfo)}</i>\n      </div>\n    </div>;\n  }\n}\n\n\nclass Dialogue extends React.Component {\n  render() {\n    return <div className='dialogue'>\n      <h2>{this.props.title}</h2>\n      <p>{this.props.desc}</p>\n      <i>{this.props.remark}</i>\n      <div className='sep-rev text-align-right'>\n        {(this.props.options || ['ok']).map((op, i) =>\n          <button\n            key={i}\n            onClick={() => this.props.onClick(op)}\n          >{op}</button>\n        )}\n      </div>\n    </div>;\n  }\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.setDialogue = this.setDialogue.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => e.key === 'Escape' && this.setState({ dialogue: undefined }));\n  }\n\n  setDialogue(title='?', desc='...', options, run=()=>{}) {\n    this.setState({\n      dialogue: <Dialogue\n        title={title}\n        desc={desc}\n        options={options}\n        onClick={op => {\n          const err = run(op);\n          if (err) {\n          } else {\n            this.setState({ dialogue: undefined });\n          }\n        }}\n      />\n    });\n  }\n\n  setLoading(message) {\n    this.setState({ loading: message });\n  }\n\n  render() {\n    return <>\n      <div className='text-align-right'>\n        <button\n          onClick={() => {\n            const className = 'dark-theme';\n            const classes = document.body.className.split(' ').filter(c => c.length !== 0);\n            const darkIndex = classes.indexOf(className);\n            if (darkIndex === -1) {\n              classes.push(className);\n            } else {\n              classes.splice(darkIndex, 1);\n            }\n            document.body.className = classes.join(' ');\n          }}\n        >Dark-Theme</button>\n      </div>\n      <Identity\n        setDialogue={this.setDialogue}\n        setLoading={this.setLoading}\n      />\n      <Encryption\n        setLoading={this.setLoading}\n      />\n      <Decryption\n        setLoading={this.setLoading}\n      />\n      <div className='quote'>\n        <a href='http://github.com/rasmusmerzin/rsa-client'>source</a>\n      </div>\n      {this.state.dialogue && <div id='popup'>{this.state.dialogue}</div>}\n      {this.state.loading && <div id='loading'>\n        <div className='message'>{this.state.loading}</div>\n        <div className='spinner'>( )</div>\n      </div>}\n    </>;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}